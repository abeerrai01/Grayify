{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[originalImage,setOriginalImage]=useState(null);const[grayscaleImage,setGrayscaleImage]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[isDragOver,setIsDragOver]=useState(false);const[showFeatures,setShowFeatures]=useState(true);const[conversionProgress,setConversionProgress]=useState(0);const fileInputRef=useRef(null);// Auto-hide features after first upload\nuseEffect(()=>{if(originalImage&&showFeatures){const timer=setTimeout(()=>setShowFeatures(false),3000);return()=>clearTimeout(timer);}},[originalImage,showFeatures]);// Convert image to grayscale using the same algorithm as your Python code\nconst convertToGrayscale=imageData=>{const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');// Create a temporary image to get dimensions\nconst img=new Image();img.src=imageData;return new Promise(resolve=>{img.onload=()=>{canvas.width=img.width;canvas.height=img.height;// Draw the original image\nctx.drawImage(img,0,0);// Get image data\nconst imageData=ctx.getImageData(0,0,canvas.width,canvas.height);const data=imageData.data;const totalPixels=data.length/4;let processedPixels=0;// Convert to grayscale using the same coefficients as your Python code\n// 0.2989 * R + 0.5870 * G + 0.1140 * B\nfor(let i=0;i<data.length;i+=4){const r=data[i];const g=data[i+1];const b=data[i+2];const gray=0.2989*r+0.5870*g+0.1140*b;data[i]=gray;// Red\ndata[i+1]=gray;// Green\ndata[i+2]=gray;// Blue\n// Alpha channel remains unchanged\nprocessedPixels++;if(processedPixels%1000===0){setConversionProgress(processedPixels/totalPixels*100);}}// Put the modified image data back\nctx.putImageData(imageData,0,0);// Convert to blob and create URL\ncanvas.toBlob(blob=>{const grayscaleUrl=URL.createObjectURL(blob);setConversionProgress(100);resolve(grayscaleUrl);},'image/jpeg',0.9);};});};const handleFileUpload=async file=>{if(!file)return;// Check if file is an image\nif(!file.type.startsWith('image/')){setError('Please select a valid image file.');return;}// Check file size (max 10MB)\nif(file.size>10*1024*1024){setError('File size too large. Please select an image smaller than 10MB.');return;}setIsLoading(true);setError(null);setConversionProgress(0);try{// Create URL for original image\nconst originalUrl=URL.createObjectURL(file);setOriginalImage(originalUrl);// Convert to grayscale\nconst grayscaleUrl=await convertToGrayscale(originalUrl);setGrayscaleImage(grayscaleUrl);}catch(err){setError('Error processing image. Please try again.');console.error('Error:',err);}finally{setIsLoading(false);setConversionProgress(0);}};const handleFileSelect=event=>{const file=event.target.files[0];handleFileUpload(file);};const handleDragOver=event=>{event.preventDefault();setIsDragOver(true);};const handleDragLeave=event=>{event.preventDefault();setIsDragOver(false);};const handleDrop=event=>{event.preventDefault();setIsDragOver(false);const files=event.dataTransfer.files;if(files.length>0){handleFileUpload(files[0]);}};const handleUploadClick=()=>{fileInputRef.current.click();};const downloadImage=(imageUrl,filename)=>{const link=document.createElement('a');link.href=imageUrl;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);};const resetImages=()=>{if(originalImage)URL.revokeObjectURL(originalImage);if(grayscaleImage)URL.revokeObjectURL(grayscaleImage);setOriginalImage(null);setGrayscaleImage(null);setError(null);setShowFeatures(true);if(fileInputRef.current){fileInputRef.current.value='';}};const features=[{icon:'🎨',title:'Smart Conversion',desc:'Uses professional luminance formula for accurate grayscale'},{icon:'⚡',title:'Lightning Fast',desc:'Real-time processing with HTML5 Canvas technology'},{icon:'📱',title:'Mobile Friendly',desc:'Works perfectly on all devices and screen sizes'},{icon:'🔒',title:'Privacy First',desc:'All processing happens locally in your browser'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"Image to Grayscale Converter\"}),showFeatures&&!originalImage&&/*#__PURE__*/_jsx(\"div\",{className:\"features-grid\",children:features.map((feature,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"feature-card\",style:{animationDelay:\"\".concat(index*0.1,\"s\")},children:[/*#__PURE__*/_jsx(\"div\",{className:\"feature-icon\",children:feature.icon}),/*#__PURE__*/_jsx(\"div\",{className:\"feature-title\",children:feature.title}),/*#__PURE__*/_jsx(\"div\",{className:\"feature-desc\",children:feature.desc})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-area \".concat(isDragOver?'dragover':''),onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,onClick:handleUploadClick,children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-text\",children:\"Click to upload or drag and drop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-hint\",children:\"Supports: JPG, PNG, GIF, BMP, WebP (Max: 10MB)\"})]}),/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:\"image/*\",onChange:handleFileSelect,className:\"file-input\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[\"Processing image... \",conversionProgress>0&&\"\".concat(Math.round(conversionProgress),\"%\")]})]}),(originalImage||grayscaleImage)&&/*#__PURE__*/_jsxs(\"div\",{className:\"images-container\",children:[originalImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"image-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-title\",children:\"Original Image\"}),/*#__PURE__*/_jsx(\"img\",{src:originalImage,alt:\"Original\",className:\"image-display\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:()=>downloadImage(originalImage,'original_image.jpg'),children:\"\\uD83D\\uDCBE Download Original\"})]}),grayscaleImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"image-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-title\",children:\"Grayscale Image\"}),/*#__PURE__*/_jsx(\"img\",{src:grayscaleImage,alt:\"Grayscale\",className:\"image-display\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:()=>downloadImage(grayscaleImage,'grayscale_image.jpg'),children:\"\\uD83C\\uDFA8 Download Grayscale\"})]})]}),(originalImage||grayscaleImage)&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'2rem'},children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-btn\",onClick:resetImages,children:\"\\uD83D\\uDD04 Upload New Image\"})}),!originalImage&&!grayscaleImage&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'3rem',color:'white',opacity:0.8},children:[/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.1rem',marginBottom:'1rem'},children:\"Transform your colorful images into stunning grayscale masterpieces! \\u2728\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.9rem'},children:\"Simply upload an image above to get started\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","App","originalImage","setOriginalImage","grayscaleImage","setGrayscaleImage","isLoading","setIsLoading","error","setError","isDragOver","setIsDragOver","showFeatures","setShowFeatures","conversionProgress","setConversionProgress","fileInputRef","timer","setTimeout","clearTimeout","convertToGrayscale","imageData","canvas","document","createElement","ctx","getContext","img","Image","src","Promise","resolve","onload","width","height","drawImage","getImageData","data","totalPixels","length","processedPixels","i","r","g","b","gray","putImageData","toBlob","blob","grayscaleUrl","URL","createObjectURL","handleFileUpload","file","type","startsWith","size","originalUrl","err","console","handleFileSelect","event","target","files","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","handleUploadClick","current","click","downloadImage","imageUrl","filename","link","href","download","body","appendChild","removeChild","resetImages","revokeObjectURL","value","features","icon","title","desc","className","children","map","feature","index","style","animationDelay","concat","onDragOver","onDragLeave","onDrop","onClick","ref","accept","onChange","Math","round","alt","textAlign","marginTop","color","opacity","fontSize","marginBottom"],"sources":["C:/Users/lenovo/PycharmProjects/Numpy_Practice/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [originalImage, setOriginalImage] = useState(null);\n  const [grayscaleImage, setGrayscaleImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [showFeatures, setShowFeatures] = useState(true);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const fileInputRef = useRef(null);\n\n  // Auto-hide features after first upload\n  useEffect(() => {\n    if (originalImage && showFeatures) {\n      const timer = setTimeout(() => setShowFeatures(false), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [originalImage, showFeatures]);\n\n  // Convert image to grayscale using the same algorithm as your Python code\n  const convertToGrayscale = (imageData) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Create a temporary image to get dimensions\n    const img = new Image();\n    img.src = imageData;\n    \n    return new Promise((resolve) => {\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        \n        // Draw the original image\n        ctx.drawImage(img, 0, 0);\n        \n        // Get image data\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        const totalPixels = data.length / 4;\n        let processedPixels = 0;\n        \n        // Convert to grayscale using the same coefficients as your Python code\n        // 0.2989 * R + 0.5870 * G + 0.1140 * B\n        for (let i = 0; i < data.length; i += 4) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n          \n          const gray = 0.2989 * r + 0.5870 * g + 0.1140 * b;\n          \n          data[i] = gray;     // Red\n          data[i + 1] = gray; // Green\n          data[i + 2] = gray; // Blue\n          // Alpha channel remains unchanged\n          \n          processedPixels++;\n          if (processedPixels % 1000 === 0) {\n            setConversionProgress((processedPixels / totalPixels) * 100);\n          }\n        }\n        \n        // Put the modified image data back\n        ctx.putImageData(imageData, 0, 0);\n        \n        // Convert to blob and create URL\n        canvas.toBlob((blob) => {\n          const grayscaleUrl = URL.createObjectURL(blob);\n          setConversionProgress(100);\n          resolve(grayscaleUrl);\n        }, 'image/jpeg', 0.9);\n      };\n    });\n  };\n\n  const handleFileUpload = async (file) => {\n    if (!file) return;\n    \n    // Check if file is an image\n    if (!file.type.startsWith('image/')) {\n      setError('Please select a valid image file.');\n      return;\n    }\n    \n    // Check file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size too large. Please select an image smaller than 10MB.');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setConversionProgress(0);\n    \n    try {\n      // Create URL for original image\n      const originalUrl = URL.createObjectURL(file);\n      setOriginalImage(originalUrl);\n      \n      // Convert to grayscale\n      const grayscaleUrl = await convertToGrayscale(originalUrl);\n      setGrayscaleImage(grayscaleUrl);\n    } catch (err) {\n      setError('Error processing image. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n      setConversionProgress(0);\n    }\n  };\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    handleFileUpload(file);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (event) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    setIsDragOver(false);\n    \n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const downloadImage = (imageUrl, filename) => {\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const resetImages = () => {\n    if (originalImage) URL.revokeObjectURL(originalImage);\n    if (grayscaleImage) URL.revokeObjectURL(grayscaleImage);\n    setOriginalImage(null);\n    setGrayscaleImage(null);\n    setError(null);\n    setShowFeatures(true);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const features = [\n    {\n      icon: '🎨',\n      title: 'Smart Conversion',\n      desc: 'Uses professional luminance formula for accurate grayscale'\n    },\n    {\n      icon: '⚡',\n      title: 'Lightning Fast',\n      desc: 'Real-time processing with HTML5 Canvas technology'\n    },\n    {\n      icon: '📱',\n      title: 'Mobile Friendly',\n      desc: 'Works perfectly on all devices and screen sizes'\n    },\n    {\n      icon: '🔒',\n      title: 'Privacy First',\n      desc: 'All processing happens locally in your browser'\n    }\n  ];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"app-title\">Image to Grayscale Converter</h1>\n      \n      {showFeatures && !originalImage && (\n        <div className=\"features-grid\">\n          {features.map((feature, index) => (\n            <div \n              key={index} \n              className=\"feature-card\"\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <div className=\"feature-icon\">{feature.icon}</div>\n              <div className=\"feature-title\">{feature.title}</div>\n              <div className=\"feature-desc\">{feature.desc}</div>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      <div className=\"upload-section\">\n        <div\n          className={`upload-area ${isDragOver ? 'dragover' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n          onClick={handleUploadClick}\n        >\n          <div className=\"upload-icon\">📁</div>\n          <div className=\"upload-text\">Click to upload or drag and drop</div>\n          <div className=\"upload-hint\">Supports: JPG, PNG, GIF, BMP, WebP (Max: 10MB)</div>\n        </div>\n        \n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileSelect}\n          className=\"file-input\"\n        />\n        \n        {error && <div className=\"error\">{error}</div>}\n        \n        {isLoading && (\n          <div className=\"loading\">\n            Processing image... {conversionProgress > 0 && `${Math.round(conversionProgress)}%`}\n          </div>\n        )}\n      </div>\n\n      {(originalImage || grayscaleImage) && (\n        <div className=\"images-container\">\n          {originalImage && (\n            <div className=\"image-card\">\n              <div className=\"image-title\">Original Image</div>\n              <img\n                src={originalImage}\n                alt=\"Original\"\n                className=\"image-display\"\n              />\n              <button\n                className=\"download-btn\"\n                onClick={() => downloadImage(originalImage, 'original_image.jpg')}\n              >\n                💾 Download Original\n              </button>\n            </div>\n          )}\n          \n          {grayscaleImage && (\n            <div className=\"image-card\">\n              <div className=\"image-title\">Grayscale Image</div>\n              <img\n                src={grayscaleImage}\n                alt=\"Grayscale\"\n                className=\"image-display\"\n              />\n              <button\n                className=\"download-btn\"\n                onClick={() => downloadImage(grayscaleImage, 'grayscale_image.jpg')}\n              >\n                🎨 Download Grayscale\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {(originalImage || grayscaleImage) && (\n        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n          <button\n            className=\"reset-btn\"\n            onClick={resetImages}\n          >\n            🔄 Upload New Image\n          </button>\n        </div>\n      )}\n\n      {!originalImage && !grayscaleImage && (\n        <div style={{ textAlign: 'center', marginTop: '3rem', color: 'white', opacity: 0.8 }}>\n          <p style={{ fontSize: '1.1rem', marginBottom: '1rem' }}>\n            Transform your colorful images into stunning grayscale masterpieces! ✨\n          </p>\n          <p style={{ fontSize: '0.9rem' }}>\n            Simply upload an image above to get started\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}