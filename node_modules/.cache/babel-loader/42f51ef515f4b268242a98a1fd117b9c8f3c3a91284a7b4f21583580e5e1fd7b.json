{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\PycharmProjects\\\\Numpy_Practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [originalImage, setOriginalImage] = useState(null);\n  const [grayscaleImage, setGrayscaleImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [showFeatures, setShowFeatures] = useState(true);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const fileInputRef = useRef(null);\n\n  // Auto-hide features after first upload\n  useEffect(() => {\n    if (originalImage && showFeatures) {\n      const timer = setTimeout(() => setShowFeatures(false), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [originalImage, showFeatures]);\n\n  // Convert image to grayscale using the same algorithm as your Python code\n  const convertToGrayscale = imageData => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // Create a temporary image to get dimensions\n    const img = new Image();\n    img.src = imageData;\n    return new Promise(resolve => {\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Draw the original image\n        ctx.drawImage(img, 0, 0);\n\n        // Get image data\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        const totalPixels = data.length / 4;\n        let processedPixels = 0;\n\n        // Convert to grayscale using the same coefficients as your Python code\n        // 0.2989 * R + 0.5870 * G + 0.1140 * B\n        for (let i = 0; i < data.length; i += 4) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n          const gray = 0.2989 * r + 0.5870 * g + 0.1140 * b;\n          data[i] = gray; // Red\n          data[i + 1] = gray; // Green\n          data[i + 2] = gray; // Blue\n          // Alpha channel remains unchanged\n\n          processedPixels++;\n          if (processedPixels % 1000 === 0) {\n            setConversionProgress(processedPixels / totalPixels * 100);\n          }\n        }\n\n        // Put the modified image data back\n        ctx.putImageData(imageData, 0, 0);\n\n        // Convert to blob and create URL\n        canvas.toBlob(blob => {\n          const grayscaleUrl = URL.createObjectURL(blob);\n          setConversionProgress(100);\n          resolve(grayscaleUrl);\n        }, 'image/jpeg', 0.9);\n      };\n    });\n  };\n  const handleFileUpload = async file => {\n    if (!file) return;\n\n    // Check if file is an image\n    if (!file.type.startsWith('image/')) {\n      setError('Please select a valid image file.');\n      return;\n    }\n\n    // Check file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size too large. Please select an image smaller than 10MB.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setConversionProgress(0);\n    try {\n      // Create URL for original image\n      const originalUrl = URL.createObjectURL(file);\n      setOriginalImage(originalUrl);\n\n      // Convert to grayscale\n      const grayscaleUrl = await convertToGrayscale(originalUrl);\n      setGrayscaleImage(grayscaleUrl);\n    } catch (err) {\n      setError('Error processing image. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n      setConversionProgress(0);\n    }\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    handleFileUpload(file);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n  const handleDragLeave = event => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setIsDragOver(false);\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  const downloadImage = (imageUrl, filename) => {\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const resetImages = () => {\n    if (originalImage) URL.revokeObjectURL(originalImage);\n    if (grayscaleImage) URL.revokeObjectURL(grayscaleImage);\n    setOriginalImage(null);\n    setGrayscaleImage(null);\n    setError(null);\n    setShowFeatures(true);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const features = [{\n    icon: '🎨',\n    title: 'Smart Conversion',\n    desc: 'Uses professional luminance formula for accurate grayscale'\n  }, {\n    icon: '⚡',\n    title: 'Lightning Fast',\n    desc: 'Real-time processing with HTML5 Canvas technology'\n  }, {\n    icon: '📱',\n    title: 'Mobile Friendly',\n    desc: 'Works perfectly on all devices and screen sizes'\n  }, {\n    icon: '🔒',\n    title: 'Privacy First',\n    desc: 'All processing happens locally in your browser'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"Grayify Logo\",\n        className: \"logo-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Grayify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), showFeatures && !originalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"features-grid\",\n      children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-card\",\n        style: {\n          animationDelay: `${index * 0.1}s`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-icon\",\n          children: feature.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-title\",\n          children: feature.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-desc\",\n          children: feature.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-area ${isDragOver ? 'dragover' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        onClick: handleUploadClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-icon\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-text\",\n          children: \"Click to upload or drag and drop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-hint\",\n          children: \"Supports: JPG, PNG, GIF, BMP, WebP (Max: 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileSelect,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [\"Processing image... \", conversionProgress > 0 && `${Math.round(conversionProgress)}%`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), (originalImage || grayscaleImage) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container\",\n      children: [originalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-title\",\n          children: \"Original Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: originalImage,\n          alt: \"Original\",\n          className: \"image-display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: () => downloadImage(originalImage, 'original_image.jpg'),\n          children: \"\\uD83D\\uDCBE Download Original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), grayscaleImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-title\",\n          children: \"Grayscale Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: grayscaleImage,\n          alt: \"Grayscale\",\n          className: \"image-display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: () => downloadImage(grayscaleImage, 'grayscale_image.jpg'),\n          children: \"\\uD83C\\uDFA8 Download Grayscale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), (originalImage || grayscaleImage) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: resetImages,\n        children: \"\\uD83D\\uDD04 Upload New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), !originalImage && !grayscaleImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '3rem',\n        color: 'white',\n        opacity: 0.8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.1rem',\n          marginBottom: '1rem'\n        },\n        children: \"Transform your colorful images into stunning grayscale masterpieces with Grayify! \\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.9rem'\n        },\n        children: \"Simply upload an image above to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L0rfNK0BHeVd90NnGlPC/oNt6Ro=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","originalImage","setOriginalImage","grayscaleImage","setGrayscaleImage","isLoading","setIsLoading","error","setError","isDragOver","setIsDragOver","showFeatures","setShowFeatures","conversionProgress","setConversionProgress","fileInputRef","timer","setTimeout","clearTimeout","convertToGrayscale","imageData","canvas","document","createElement","ctx","getContext","img","Image","src","Promise","resolve","onload","width","height","drawImage","getImageData","data","totalPixels","length","processedPixels","i","r","g","b","gray","putImageData","toBlob","blob","grayscaleUrl","URL","createObjectURL","handleFileUpload","file","type","startsWith","size","originalUrl","err","console","handleFileSelect","event","target","files","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","handleUploadClick","current","click","downloadImage","imageUrl","filename","link","href","download","body","appendChild","removeChild","resetImages","revokeObjectURL","value","features","icon","title","desc","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","feature","index","style","animationDelay","onDragOver","onDragLeave","onDrop","onClick","ref","accept","onChange","Math","round","textAlign","marginTop","color","opacity","fontSize","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/PycharmProjects/Numpy_Practice/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [originalImage, setOriginalImage] = useState(null);\n  const [grayscaleImage, setGrayscaleImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [showFeatures, setShowFeatures] = useState(true);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const fileInputRef = useRef(null);\n\n  // Auto-hide features after first upload\n  useEffect(() => {\n    if (originalImage && showFeatures) {\n      const timer = setTimeout(() => setShowFeatures(false), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [originalImage, showFeatures]);\n\n  // Convert image to grayscale using the same algorithm as your Python code\n  const convertToGrayscale = (imageData) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Create a temporary image to get dimensions\n    const img = new Image();\n    img.src = imageData;\n    \n    return new Promise((resolve) => {\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        \n        // Draw the original image\n        ctx.drawImage(img, 0, 0);\n        \n        // Get image data\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        const totalPixels = data.length / 4;\n        let processedPixels = 0;\n        \n        // Convert to grayscale using the same coefficients as your Python code\n        // 0.2989 * R + 0.5870 * G + 0.1140 * B\n        for (let i = 0; i < data.length; i += 4) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n          \n          const gray = 0.2989 * r + 0.5870 * g + 0.1140 * b;\n          \n          data[i] = gray;     // Red\n          data[i + 1] = gray; // Green\n          data[i + 2] = gray; // Blue\n          // Alpha channel remains unchanged\n          \n          processedPixels++;\n          if (processedPixels % 1000 === 0) {\n            setConversionProgress((processedPixels / totalPixels) * 100);\n          }\n        }\n        \n        // Put the modified image data back\n        ctx.putImageData(imageData, 0, 0);\n        \n        // Convert to blob and create URL\n        canvas.toBlob((blob) => {\n          const grayscaleUrl = URL.createObjectURL(blob);\n          setConversionProgress(100);\n          resolve(grayscaleUrl);\n        }, 'image/jpeg', 0.9);\n      };\n    });\n  };\n\n  const handleFileUpload = async (file) => {\n    if (!file) return;\n    \n    // Check if file is an image\n    if (!file.type.startsWith('image/')) {\n      setError('Please select a valid image file.');\n      return;\n    }\n    \n    // Check file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size too large. Please select an image smaller than 10MB.');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setConversionProgress(0);\n    \n    try {\n      // Create URL for original image\n      const originalUrl = URL.createObjectURL(file);\n      setOriginalImage(originalUrl);\n      \n      // Convert to grayscale\n      const grayscaleUrl = await convertToGrayscale(originalUrl);\n      setGrayscaleImage(grayscaleUrl);\n    } catch (err) {\n      setError('Error processing image. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n      setConversionProgress(0);\n    }\n  };\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    handleFileUpload(file);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (event) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    setIsDragOver(false);\n    \n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const downloadImage = (imageUrl, filename) => {\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const resetImages = () => {\n    if (originalImage) URL.revokeObjectURL(originalImage);\n    if (grayscaleImage) URL.revokeObjectURL(grayscaleImage);\n    setOriginalImage(null);\n    setGrayscaleImage(null);\n    setError(null);\n    setShowFeatures(true);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const features = [\n    {\n      icon: '🎨',\n      title: 'Smart Conversion',\n      desc: 'Uses professional luminance formula for accurate grayscale'\n    },\n    {\n      icon: '⚡',\n      title: 'Lightning Fast',\n      desc: 'Real-time processing with HTML5 Canvas technology'\n    },\n    {\n      icon: '📱',\n      title: 'Mobile Friendly',\n      desc: 'Works perfectly on all devices and screen sizes'\n    },\n    {\n      icon: '🔒',\n      title: 'Privacy First',\n      desc: 'All processing happens locally in your browser'\n    }\n  ];\n\n  return (\n    <div className=\"container\">\n      <div className=\"logo-container\">\n        <img src=\"/logo.png\" alt=\"Grayify Logo\" className=\"logo-image\" />\n        <h1 className=\"app-title\">Grayify</h1>\n      </div>\n      \n      {showFeatures && !originalImage && (\n        <div className=\"features-grid\">\n          {features.map((feature, index) => (\n            <div \n              key={index} \n              className=\"feature-card\"\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <div className=\"feature-icon\">{feature.icon}</div>\n              <div className=\"feature-title\">{feature.title}</div>\n              <div className=\"feature-desc\">{feature.desc}</div>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      <div className=\"upload-section\">\n        <div\n          className={`upload-area ${isDragOver ? 'dragover' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n          onClick={handleUploadClick}\n        >\n          <div className=\"upload-icon\">📁</div>\n          <div className=\"upload-text\">Click to upload or drag and drop</div>\n          <div className=\"upload-hint\">Supports: JPG, PNG, GIF, BMP, WebP (Max: 10MB)</div>\n        </div>\n        \n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileSelect}\n          className=\"file-input\"\n        />\n        \n        {error && <div className=\"error\">{error}</div>}\n        \n        {isLoading && (\n          <div className=\"loading\">\n            Processing image... {conversionProgress > 0 && `${Math.round(conversionProgress)}%`}\n          </div>\n        )}\n      </div>\n\n      {(originalImage || grayscaleImage) && (\n        <div className=\"images-container\">\n          {originalImage && (\n            <div className=\"image-card\">\n              <div className=\"image-title\">Original Image</div>\n              <img\n                src={originalImage}\n                alt=\"Original\"\n                className=\"image-display\"\n              />\n              <button\n                className=\"download-btn\"\n                onClick={() => downloadImage(originalImage, 'original_image.jpg')}\n              >\n                💾 Download Original\n              </button>\n            </div>\n          )}\n          \n          {grayscaleImage && (\n            <div className=\"image-card\">\n              <div className=\"image-title\">Grayscale Image</div>\n              <img\n                src={grayscaleImage}\n                alt=\"Grayscale\"\n                className=\"image-display\"\n              />\n              <button\n                className=\"download-btn\"\n                onClick={() => downloadImage(grayscaleImage, 'grayscale_image.jpg')}\n              >\n                🎨 Download Grayscale\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {(originalImage || grayscaleImage) && (\n        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n          <button\n            className=\"reset-btn\"\n            onClick={resetImages}\n          >\n            🔄 Upload New Image\n          </button>\n        </div>\n      )}\n\n      {!originalImage && !grayscaleImage && (\n        <div style={{ textAlign: 'center', marginTop: '3rem', color: 'white', opacity: 0.8 }}>\n          <p style={{ fontSize: '1.1rem', marginBottom: '1rem' }}>\n            Transform your colorful images into stunning grayscale masterpieces with Grayify! ✨\n          </p>\n          <p style={{ fontSize: '0.9rem' }}>\n            Simply upload an image above to get started\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}